/*
Yousef, Amir
COP-3252
Assignment4
2/28/2014
*/
import java.util.*; 
import javax.swing.JOptionPane; 
public class KnightDriver 
{
public static void main(String[] args) 
{ 
while(true)
{
System.out.println("\n\nWelcome to KnightFight!");
String knightName = JOptionPane.showInputDialog("Enter the knightName of your Knight: ");
Random randomValue = new Random(); 
int knightHitPoints = randomValue.nextInt(1000); 
int knightWeapon = Integer.parseInt(JOptionPane.showInputDialog("Now select your weapon! (Choose number)\n" 
+ "1)Long Sword\n" + "2)Battle Axe\n" + "3)Spear\n" + "4)Warhammer"));
System.out.printf("\n\n%s%d\n\n", "Your choice my liege? :", knightWeapon);
int knightArmor = Integer.parseInt(JOptionPane.showInputDialog("Now select your armor! (Choose number)\n" 
+ "1)Metal\n" + "2)Plate\n" + "3)Chain\n" + "4)Leather"));
Knight newKnight = new Knight(knightName, knightArmor, knightWeapon, knightHitPoints); 
newKnight.setKnightName(knightName); 
newKnight.setKnightArmor(knightArmor);
newKnight.setKnightWeapon(knightWeapon);
newKnight.setHitPoints(knightHitPoints);
System.out.printf("\n\n%s%s\n\n%s%d\n\n%s%d\n\n%s%d\n\n", 
"Knight Name: ", knightName, 
"Knight Armor: ", knightArmor, 
"Knight Weapon: ", knightWeapon, 
"Knight Hit Points: ", knightHitPoints);  
String autoGeneratedOpponent = JOptionPane.showInputDialog("Would you like to auto generate your opponent? (y|n)"); 
if (autoGeneratedOpponent.equals("y"))
{
int randomOpponentName = randomValue.nextInt(1000);
int opponentArmor = randomValue.nextInt(1000);
int opponentWeapon = randomValue.nextInt(1000); 
int opponentHitPoints = randomValue.nextInt(1000);

int knightDamage = opponentHitPoints - knightHitPoints;
int opponentDamage = knightHitPoints - opponentHitPoints;
  
Knight randomOpponent = new Knight(randomOpponentName, opponentArmor, opponentWeapon, opponentHitPoints);
randomOpponent.setRandomOpponentName(randomOpponentName);
randomOpponent.setOpponentArmor(opponentArmor);
randomOpponent.setOpponentWeapon(opponentWeapon);
randomOpponent.setHitPoints(opponentHitPoints);
System.out.printf("\n\n%s%d\n\n%s%d\n\n%s%d\n\n%s%d\n\n%s%d\n\n", 
"Opponent Name: ", randomOpponentName, 
"Opponent Armor: ", opponentArmor, 
"Opponent Weapon: ", opponentWeapon, 
"Opponent Hit Points: ", opponentHitPoints,
"Knight Damage: ", knightDamage);

if(knightDamage < opponentDamage)
System.out.println("\nThe knight is the winner");
else if(knightDamage > opponentDamage)
System.out.println("\nThe Opponent is the winner");

}
else if (autoGeneratedOpponent.equals("n"))
{ 
String opponentName = JOptionPane.showInputDialog("Enter the knightName of your opponent: "); 
int opponentWeapon = Integer.parseInt(JOptionPane.showInputDialog("Now select your opponent's weapon! (Choose number)\n" 
+ "1)Long Sword\n" + "2)Battle Axe\n" + "3)Spear\n" + "4)Warhammer"));
System.out.printf("\n\n%s%d\n\n", "Your choice my liege? :", opponentWeapon); 
int opponentArmor = Integer.parseInt(JOptionPane.showInputDialog("Now select your opponent armor! (Choose number)\n" 
+ "1)Metal\n" + "2)Plate\n" + "3)Chain\n" + "4)Leather"));
int opponentHitPoints = randomValue.nextInt(1000);
int knightDamage = opponentHitPoints - knightHitPoints; 
int opponentDamage = knightHitPoints - opponentHitPoints; 
Knight newOpponent = new Knight(opponentName, opponentArmor, opponentHitPoints, opponentWeapon);
newOpponent.setOpponentName(opponentName);
newOpponent.setOpponentArmor(opponentArmor);
newOpponent.setOpponentWeapon(opponentWeapon);
newOpponent.setHitPoints(opponentHitPoints);
System.out.printf("\n\n%s%s\n\n%s%d\n\n%s%d\n\n%s%d\n\n%s%d\n\n", 
"Opponent Name: ", opponentName, 
"Opponentt Armor: ", opponentArmor, 
"Opponent Weapon: ", opponentWeapon, 
"Opponent Hit Points: ", opponentHitPoints,
"Knight Damage: ", knightDamage);

if(knightDamage < opponentDamage)
System.out.println("The knight is the winner");
else if(knightDamage > opponentDamage)
System.out.println("The Opponent is the winner");

} 
newKnight.win();
newKnight.toString();
String playAgain = JOptionPane.showInputDialog("\nWould you like to play again? (y|n)");
if(playAgain.equals("n"))
{
System.exit(1);
}
}
}
}
